#version 430
//#extension GL_ARB_gpu_shader_fp64 : enable

uniform double roll;
layout (binding=0, rgba32f) uniform image2D destTex;
layout (binding=1, rgba32f) uniform image2D inTex;
layout (local_size_x = 16, local_size_y = 16) in;
void main() {
     ivec2 storePos = ivec2(gl_GlobalInvocationID.xy);
     double localCoef = length(vec2(ivec2(gl_LocalInvocationID.xy)-8)/8.0);
     vec4 tt = imageLoad(inTex, storePos);
     dvec4 aa = dvec4(0.4, 0.2, 0.3, 0.4);
     double globalCoef = sin(roll*roll*exp(roll)); //((gl_WorkGroupID.x+gl_WorkGroupID.y)*0.1 + roll)*0.5);
     imageStore(destTex, storePos, vec4(1.0-globalCoef*localCoef, 0.0, 0.0, 0.0));
}

//uniform float roll;
//uniform writeonly image2D destTex;
//layout (local_size_x = 16, local_size_y = 16) in;
//void main() {
//     ivec2 storePos = ivec2(gl_GlobalInvocationID.xy);
//     float localCoef = length(vec2(ivec2(gl_LocalInvocationID.xy)-8)/8.0);
//     float globalCoef = 1.0; //sin(((gl_WorkGroupID.x+gl_WorkGroupID.y)*0.1 + roll)*0.5);
//     //imageStore(destTex, storePos, vec4(1.0-globalCoef*localCoef, 0.0, 0.0, 0.0));
//}

//void main(void) {
//    dvec4 aa = dvec4(0.4, 0.2, 0.3, 0,4);
//    //gl_FragColor = aa;
//}
